// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
  Other
}

model PublicUser {
  id                         BigInt    @id @default(autoincrement())
  storefrontId               Int?
  firstName                  String?   @db.VarChar(1500)
  lastName                   String?   @db.VarChar(1500)
  street1                    String?   @db.VarChar(1500)
  street2                    String?   @db.VarChar(1500)
  zipcode                    String?   @db.VarChar(150)
  city                       String?   @db.VarChar(150)
  state                      String?   @db.VarChar(150)
  country                    String?   @db.VarChar(150)
  email                      String    @db.VarChar(1500)
  phoneNumber                String?   @db.VarChar(50)
  isActive                   Boolean   @default(true)
  password                   String    @db.VarChar(1500)
  resetPasswordToken         String?   @unique @db.VarChar(150)
  verifyEmailToken           String?   @unique @db.VarChar(150)
  isEmailVerified            Boolean   @default(false)
  resetPasswordTokenExpireAt DateTime? @db.Timestamptz(3)
  referralCode               String?   @db.VarChar(1500)
  inviterReferralCode        String?   @db.VarChar(1500)
  memberId                   String?   @db.VarChar(255)
  dateOfBirth                DateTime? @db.Timestamptz(3)
  receiveNotifications       Boolean   @default(true)
  receiveWebPush             Boolean   @default(true)
  isArchived                 Boolean   @default(false)
  partnerId                  BigInt?
  age                        Int       @default(0)
  gender                     Gender?
  createdAt                  DateTime  @default(now()) @db.Timestamptz(3)
  updatedAt                  DateTime  @default(now()) @updatedAt @db.Timestamptz(3)

  @@unique([storefrontId, email])
  @@unique([storefrontId, memberId])
}

model StorefrontProgram {
  id           BigInt   @id @default(autoincrement())
  storefrontId Int?
  programId    Int?
  createdAt    DateTime @default(now()) @db.Timestamptz(3)
  updatedAt    DateTime @default(now()) @updatedAt @db.Timestamptz(3)

  @@unique([storefrontId, programId])
}
